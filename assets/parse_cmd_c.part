
int banip_cmd(char* ip, int duration){
	printf("[Parse] Error: banip(char* ip, int duration) is unimplemented.\n");

	return 0;
}
	
int banname_cmd(char* name, int duration){
	printf("[Parse] Error: banname(char* name, int duration) is unimplemented.\n");

	return 0;
}
	
int bans_cmd(){
	printf("[Parse] Error: bans() is unimplemented.\n");

	return 0;
}
	
int banusgn_cmd(int usgn, int duration){
	printf("[Parse] Error: banusgn(int usgn, int duration) is unimplemented.\n");

	return 0;
}
	
int changelevel_cmd(char* map){
	printf("[Parse] Error: changelevel(char* map) is unimplemented.\n");

	return 0;
}
	
int changemap_cmd(char* map){
	printf("[Parse] Error: changemap(char* map) is unimplemented.\n");

	return 0;
}
	
int customkill_cmd(int killer, char* weapon, int victim){
	printf("[Parse] Error: customkill(int killer, char* weapon, int victim) is unimplemented.\n");

	return 0;
}
	
int deathslap_cmd(char* player){
	printf("[Parse] Error: deathslap(char* player) is unimplemented.\n");

	return 0;
}
	
int bot_add_cmd(){
	printf("[Parse] Error: bot_add() is unimplemented.\n");

	return 0;
}
	
int bot_add_ct_cmd(){
	printf("[Parse] Error: bot_add_ct() is unimplemented.\n");

	return 0;
}
	
int bot_add_t_cmd(){
	printf("[Parse] Error: bot_add_t() is unimplemented.\n");

	return 0;
}
	
int bot_count_cmd(int count){
	printf("[Parse] Error: bot_count(int count) is unimplemented.\n");

	return 0;
}
	
int bot_jointeam_cmd(int team){
	printf("[Parse] Error: bot_jointeam(int team) is unimplemented.\n");

	return 0;
}
	
int bot_kill_cmd(){
	printf("[Parse] Error: bot_kill() is unimplemented.\n");

	return 0;
}
	
int bot_prefix_cmd(char* prefix){
	printf("[Parse] Error: bot_prefix(char* prefix) is unimplemented.\n");

	return 0;
}
	
int bot_remove_cmd(){
	printf("[Parse] Error: bot_remove() is unimplemented.\n");

	return 0;
}
	
int bot_remove_all_cmd(){
	printf("[Parse] Error: bot_remove_all() is unimplemented.\n");

	return 0;
}
	
int bot_remove_ct_cmd(){
	printf("[Parse] Error: bot_remove_ct() is unimplemented.\n");

	return 0;
}
	
int bot_remove_t_cmd(){
	printf("[Parse] Error: bot_remove_t() is unimplemented.\n");

	return 0;
}
	
int bot_skill_cmd(int skill){
	printf("[Parse] Error: bot_skill(int skill) is unimplemented.\n");

	return 0;
}
	
int bot_weapons_cmd(int weapons){
	printf("[Parse] Error: bot_weapons(int weapons) is unimplemented.\n");

	return 0;
}
	
int effect_cmd(char* effect, int x, int y, int p1, int p2, int r, int g, int b){
	printf("[Parse] Error: effect(char* effect, int x, int y, int p1, int p2, int r, int g, int b) is unimplemented.\n");

	return 0;
}
	
int equip_cmd(int player, int weapon){
	printf("[Parse] Error: equip(int player, int weapon) is unimplemented.\n");

	return 0;
}
	
int explosion_cmd(int x, int y, int size, int damage, int source){
	printf("[Parse] Error: explosion(int x, int y, int size, int damage, int source) is unimplemented.\n");

	return 0;
}
	
int flashplayer_cmd(int player, int intensity){
	printf("[Parse] Error: flashplayer(int player, int intensity) is unimplemented.\n");

	return 0;
}
	
int flashposition_cmd(int x, int y, int intensity){
	printf("[Parse] Error: flashposition(int x, int y, int intensity) is unimplemented.\n");

	return 0;
}
	
int hudtxt_cmd(int id, char* txt, int x, int y, int align){
	printf("[Parse] Error: hudtxt(int id, char* txt, int x, int y, int align) is unimplemented.\n");

	return 0;
}
	
int hudtxt2_cmd(int player, int id, char* txt, int x, int y, int align){
	printf("[Parse] Error: hudtxt2(int player, int id, char* txt, int x, int y, int align) is unimplemented.\n");

	return 0;
}
	
int hudtxtalphafade_cmd(int player, int id, int duration, float alpha){
	printf("[Parse] Error: hudtxtalphafade(int player, int id, int duration, float alpha) is unimplemented.\n");

	return 0;
}
	
int hudtxtcolorfade_cmd(int player, int id, int duration, int red, int green, int blue){
	printf("[Parse] Error: hudtxtcolorfade(int player, int id, int duration, int red, int green, int blue) is unimplemented.\n");

	return 0;
}
	
int hudtxtmove_cmd(int player, int id, int duration, int x, int y){
	printf("[Parse] Error: hudtxtmove(int player, int id, int duration, int x, int y) is unimplemented.\n");

	return 0;
}
	
int items_cmd(){
	printf("[Parse] Error: items() is unimplemented.\n");

	return 0;
}
	
int kick_cmd(char* player, char* reason){
	printf("[Parse] Error: kick(char* player, char* reason) is unimplemented.\n");

	return 0;
}
	
int killobject_cmd(int object){
	printf("[Parse] Error: killobject(int object) is unimplemented.\n");

	return 0;
}
	
int killplayer_cmd(int player){
	printf("[Parse] Error: killplayer(int player) is unimplemented.\n");

	return 0;
}
	
int listbans_cmd(){
	printf("[Parse] Error: listbans() is unimplemented.\n");

	return 0;
}
	
int listplayers_cmd(){
	printf("[Parse] Error: listplayers() is unimplemented.\n");

	return 0;
}
	
int logaddress_add_cmd(char* address){
	printf("[Parse] Error: logaddress_add(char* address) is unimplemented.\n");

	return 0;
}
	
int logaddress_remove_cmd(char* address){
	printf("[Parse] Error: logaddress_remove(char* address) is unimplemented.\n");

	return 0;
}
	
int logaddress_removeall_cmd(){
	printf("[Parse] Error: logaddress_removeall() is unimplemented.\n");

	return 0;
}
	
int lua_cmd(char* script){
	printf("[Parse] Error: lua(char* script) is unimplemented.\n");

	return 0;
}
	
int luareset_cmd(){
	printf("[Parse] Error: luareset() is unimplemented.\n");

	return 0;
}
	
int makect_cmd(char* player){
	printf("[Parse] Error: makect(char* player) is unimplemented.\n");

	return 0;
}
	
int makespec_cmd(char* player){
	printf("[Parse] Error: makespec(char* player) is unimplemented.\n");

	return 0;
}
	
int maket_cmd(char* player){
	printf("[Parse] Error: maket(char* player) is unimplemented.\n");

	return 0;
}
	
int map_cmd(char* map){
	printf("[Parse] Error: map(char* map) is unimplemented.\n");

	return 0;
}
	
int maps_cmd(){
	printf("[Parse] Error: maps() is unimplemented.\n");

	return 0;
}
	
int mp_antispeeder_cmd(int antispeeder){
	printf("[Parse] Error: mp_antispeeder(int antispeeder) is unimplemented.\n");

	return 0;
}
	
int mp_autogamemode_cmd(int autogamemode){
	printf("[Parse] Error: mp_autogamemode(int autogamemode) is unimplemented.\n");

	return 0;
}
	
int mp_autoteambalance_cmd(int balance){
	printf("[Parse] Error: mp_autoteambalance(int balance) is unimplemented.\n");

	return 0;
}
	
int mp_building_health_cmd(char* building, int price){
	printf("[Parse] Error: mp_building_health(char* building, int price) is unimplemented.\n");

	return 0;
}
	
int mp_building_limit_cmd(char* building, int limit){
	printf("[Parse] Error: mp_building_limit(char* building, int limit) is unimplemented.\n");

	return 0;
}
	
int mp_building_price_cmd(char* building, int price){
	printf("[Parse] Error: mp_building_price(char* building, int price) is unimplemented.\n");

	return 0;
}
	
int mp_buytime_cmd(float time){
	printf("[Parse] Error: mp_buytime(float time) is unimplemented.\n");

	return 0;
}
	
int mp_c4timer_cmd(int time){
	printf("[Parse] Error: mp_c4timer(int time) is unimplemented.\n");

	return 0;
}
	
int mp_curtailedexplosions_cmd(int curtailed){
	printf("[Parse] Error: mp_curtailedexplosions(int curtailed) is unimplemented.\n");

	return 0;
}
	
int mp_damagefactor_cmd(float factor){
	printf("[Parse] Error: mp_damagefactor(float factor) is unimplemented.\n");

	return 0;
}
	
int mp_deathdrop_cmd(int drop){
	printf("[Parse] Error: mp_deathdrop(int drop) is unimplemented.\n");

	return 0;
}
	
int mp_dispenser_health_cmd(int health){
	printf("[Parse] Error: mp_dispenser_health(int health) is unimplemented.\n");

	return 0;
}
	
int mp_dispenser_money_cmd(int money){
	printf("[Parse] Error: mp_dispenser_money(int money) is unimplemented.\n");

	return 0;
}
	
int mp_dmspawnmoney_cmd(int money){
	printf("[Parse] Error: mp_dmspawnmoney(int money) is unimplemented.\n");

	return 0;
}
	
int mp_dropgrenades_cmd(int drop){
	printf("[Parse] Error: mp_dropgrenades(int drop) is unimplemented.\n");

	return 0;
}
	
int mp_floodprot_cmd(int flood){
	printf("[Parse] Error: mp_floodprot(int flood) is unimplemented.\n");

	return 0;
}
	
int mp_freezetime_cmd(int time){
	printf("[Parse] Error: mp_freezetime(int time) is unimplemented.\n");

	return 0;
}
	
int mp_grenaderebuy_cmd(int allowed){
	printf("[Parse] Error: mp_grenaderebuy(int allowed) is unimplemented.\n");

	return 0;
}
	
int mp_hostagepenalty_cmd(int kills){
	printf("[Parse] Error: mp_hostagepenalty(int kills) is unimplemented.\n");

	return 0;
}
	
int mp_idleaction_cmd(int action){
	printf("[Parse] Error: mp_idleaction(int action) is unimplemented.\n");

	return 0;
}
	
int mp_idlekick_cmd(int idle){
	printf("[Parse] Error: mp_idlekick(int idle) is unimplemented.\n");

	return 0;
}
	
int mp_idletime_cmd(int time){
	printf("[Parse] Error: mp_idletime(int time) is unimplemented.\n");

	return 0;
}
	
int mp_infammo_cmd(int infinite){
	printf("[Parse] Error: mp_infammo(int infinite) is unimplemented.\n");

	return 0;
}
	
int mp_kevlar_cmd(float percent){
	printf("[Parse] Error: mp_kevlar(float percent) is unimplemented.\n");

	return 0;
}
	
int mp_kickpercent_cmd(float percent){
	printf("[Parse] Error: mp_kickpercent(float percent) is unimplemented.\n");

	return 0;
}
	
int mp_killbuildingmoney_cmd(int money){
	printf("[Parse] Error: mp_killbuildingmoney(int money) is unimplemented.\n");

	return 0;
}
	
int mp_killbuildings_cmd(int kill){
	printf("[Parse] Error: mp_killbuildings(int kill) is unimplemented.\n");

	return 0;
}
	
int mp_killinfo_cmd(int info){
	printf("[Parse] Error: mp_killinfo(int info) is unimplemented.\n");

	return 0;
}
	
int mp_killteambuildings_cmd(int mode){
	printf("[Parse] Error: mp_killteambuildings(int mode) is unimplemented.\n");

	return 0;
}
	
int mp_lagcompensation_cmd(int max){
	printf("[Parse] Error: mp_lagcompensation(int max) is unimplemented.\n");

	return 0;
}
	
int mp_localrconoutput_cmd(int output){
	printf("[Parse] Error: mp_localrconoutput(int output) is unimplemented.\n");

	return 0;
}
	
int mp_luamap_cmd(int use){
	printf("[Parse] Error: mp_luamap(int use) is unimplemented.\n");

	return 0;
}
	
int mp_luaserver_cmd(char* file){
	printf("[Parse] Error: mp_luaserver(char* file) is unimplemented.\n");

	return 0;
}
	
int mp_mapgoalscore_cmd(int score){
	printf("[Parse] Error: mp_mapgoalscore(int score) is unimplemented.\n");

	return 0;
}
	
int mp_mapvoteratio_cmd(float percent){
	printf("[Parse] Error: mp_mapvoteratio(float percent) is unimplemented.\n");

	return 0;
}
	
int mp_maxclientsip_cmd(int clients){
	printf("[Parse] Error: mp_maxclientsip(int clients) is unimplemented.\n");

	return 0;
}
	
int mp_maxrconfails_cmd(int max){
	printf("[Parse] Error: mp_maxrconfails(int max) is unimplemented.\n");

	return 0;
}
	
int mp_natholepunching_cmd(int allow){
	printf("[Parse] Error: mp_natholepunching(int allow) is unimplemented.\n");

	return 0;
}
	
int mp_pinglimit_cmd(int limit){
	printf("[Parse] Error: mp_pinglimit(int limit) is unimplemented.\n");

	return 0;
}
	
int mp_postspawn_cmd(int time){
	printf("[Parse] Error: mp_postspawn(int time) is unimplemented.\n");

	return 0;
}
	
int mp_radar_cmd(int radar){
	printf("[Parse] Error: mp_radar(int radar) is unimplemented.\n");

	return 0;
}
	
int mp_randomspawn_cmd(int random){
	printf("[Parse] Error: mp_randomspawn(int random) is unimplemented.\n");

	return 0;
}
	
int mp_reservations_cmd(char* reservations){
	printf("[Parse] Error: mp_reservations(char* reservations) is unimplemented.\n");

	return 0;
}
	
int mp_respawndelay_cmd(int delay){
	printf("[Parse] Error: mp_respawndelay(int delay) is unimplemented.\n");

	return 0;
}
	
int mp_roundlimit_cmd(int rounds){
	printf("[Parse] Error: mp_roundlimit(int rounds) is unimplemented.\n");

	return 0;
}
	
int mp_roundtime_cmd(float time){
	printf("[Parse] Error: mp_roundtime(float time) is unimplemented.\n");

	return 0;
}
	
int mp_startmoney_cmd(int money){
	printf("[Parse] Error: mp_startmoney(int money) is unimplemented.\n");

	return 0;
}
	
int mp_supply_items_cmd(char* itemlist){
	printf("[Parse] Error: mp_supply_items(char* itemlist) is unimplemented.\n");

	return 0;
}
	
int mp_teamkillpenalty_cmd(int kills){
	printf("[Parse] Error: mp_teamkillpenalty(int kills) is unimplemented.\n");

	return 0;
}
	
int mp_teleportreload_cmd(int reload){
	printf("[Parse] Error: mp_teleportreload(int reload) is unimplemented.\n");

	return 0;
}
	
int mp_tempbantime_cmd(float time){
	printf("[Parse] Error: mp_tempbantime(float time) is unimplemented.\n");

	return 0;
}
	
int mp_timelimit_cmd(float time){
	printf("[Parse] Error: mp_timelimit(float time) is unimplemented.\n");

	return 0;
}
	
int mp_tkpunish_cmd(int kill){
	printf("[Parse] Error: mp_tkpunish(int kill) is unimplemented.\n");

	return 0;
}
	
int mp_trace_cmd(int accuracy){
	printf("[Parse] Error: mp_trace(int accuracy) is unimplemented.\n");

	return 0;
}
	
int mp_turretdamage_cmd(int damage){
	printf("[Parse] Error: mp_turretdamage(int damage) is unimplemented.\n");

	return 0;
}
	
int mp_unbuildable_cmd(char* buildings){
	printf("[Parse] Error: mp_unbuildable(char* buildings) is unimplemented.\n");

	return 0;
}
	
int mp_unbuyable_cmd(char* unbuyable){
	printf("[Parse] Error: mp_unbuyable(char* unbuyable) is unimplemented.\n");

	return 0;
}
	
int mp_vulnerablehostages_cmd(int vulnerable){
	printf("[Parse] Error: mp_vulnerablehostages(int vulnerable) is unimplemented.\n");

	return 0;
}
	
int mp_winlimit_cmd(int wins){
	printf("[Parse] Error: mp_winlimit(int wins) is unimplemented.\n");

	return 0;
}
	
int mp_wpndmg_cmd(char* name, int damage){
	printf("[Parse] Error: mp_wpndmg(char* name, int damage) is unimplemented.\n");

	return 0;
}
	
int mp_wpndmg_z1_cmd(char* name, int damage){
	printf("[Parse] Error: mp_wpndmg_z1(char* name, int damage) is unimplemented.\n");

	return 0;
}
	
int mp_wpndmg_z2_cmd(char* name, int damage){
	printf("[Parse] Error: mp_wpndmg_z2(char* name, int damage) is unimplemented.\n");

	return 0;
}
	
int mp_zombiedmg_cmd(float percentage){
	printf("[Parse] Error: mp_zombiedmg(float percentage) is unimplemented.\n");

	return 0;
}
	
int mp_zombiekillequip_cmd(int weapon){
	printf("[Parse] Error: mp_zombiekillequip(int weapon) is unimplemented.\n");

	return 0;
}
	
int mp_zombiekillscore_cmd(int kill){
	printf("[Parse] Error: mp_zombiekillscore(int kill) is unimplemented.\n");

	return 0;
}
	
int mp_zombierecover_cmd(int recover){
	printf("[Parse] Error: mp_zombierecover(int recover) is unimplemented.\n");

	return 0;
}
	
int mp_zombiespeedmod_cmd(int speedmod){
	printf("[Parse] Error: mp_zombiespeedmod(int speedmod) is unimplemented.\n");

	return 0;
}
	
int msg_cmd(char* message){
	printf("[Parse] Error: msg(char* message) is unimplemented.\n");

	return 0;
}
	
int rcon_cmd(char* commands){
	printf("[Parse] Error: rcon(char* commands) is unimplemented.\n");

	return 0;
}
	
int rcon_password_cmd(char* password){
	printf("[Parse] Error: rcon_password(char* password) is unimplemented.\n");

	return 0;
}
	
int rcon_pw_cmd(char* password){
	printf("[Parse] Error: rcon_pw(char* password) is unimplemented.\n");

	return 0;
}
	
int removeitem_cmd(int item){
	printf("[Parse] Error: removeitem(int item) is unimplemented.\n");

	return 0;
}
	
int reroute_cmd(int player, char* address){
	printf("[Parse] Error: reroute(int player, char* address) is unimplemented.\n");

	return 0;
}
	
int restart_cmd(int delay){
	printf("[Parse] Error: restart(int delay) is unimplemented.\n");

	return 0;
}
	
int restartround_cmd(int delay){
	printf("[Parse] Error: restartround(int delay) is unimplemented.\n");

	return 0;
}
	
int setarmor_cmd(int player, int armor){
	printf("[Parse] Error: setarmor(int player, int armor) is unimplemented.\n");

	return 0;
}
	
int setdeaths_cmd(int player, int deaths){
	printf("[Parse] Error: setdeaths(int player, int deaths) is unimplemented.\n");

	return 0;
}
	
int sethealth_cmd(int player, int health){
	printf("[Parse] Error: sethealth(int player, int health) is unimplemented.\n");

	return 0;
}
	
int setmaxhealth_cmd(int player, int maxhealth){
	printf("[Parse] Error: setmaxhealth(int player, int maxhealth) is unimplemented.\n");

	return 0;
}
	
int setmoney_cmd(int player, int money){
	printf("[Parse] Error: setmoney(int player, int money) is unimplemented.\n");

	return 0;
}
	
int setname_cmd(int player, char* name){
	printf("[Parse] Error: setname(int player, char* name) is unimplemented.\n");

	return 0;
}
	
int setpos_cmd(int player, int x, int y){
	printf("[Parse] Error: setpos(int player, int x, int y) is unimplemented.\n");

	return 0;
}
	
int setscore_cmd(int player, int score){
	printf("[Parse] Error: setscore(int player, int score) is unimplemented.\n");

	return 0;
}
	
int setweapon_cmd(int player, int weapon){
	printf("[Parse] Error: setweapon(int player, int weapon) is unimplemented.\n");

	return 0;
}
	
int shake_cmd(int player, int power){
	printf("[Parse] Error: shake(int player, int power) is unimplemented.\n");

	return 0;
}
	
int slap_cmd(char* player){
	printf("[Parse] Error: slap(char* player) is unimplemented.\n");

	return 0;
}
	
int spawnitem_cmd(int item, int x, int y){
	printf("[Parse] Error: spawnitem(int item, int x, int y) is unimplemented.\n");

	return 0;
}
	
int spawnnpc_cmd(int type, int x, int y, int rot){
	printf("[Parse] Error: spawnnpc(int type, int x, int y, int rot) is unimplemented.\n");

	return 0;
}
	
int spawnobject_cmd(int type, int x, int y, int rot, int mode, int team, int player){
	printf("[Parse] Error: spawnobject(int type, int x, int y, int rot, int mode, int team, int player) is unimplemented.\n");

	return 0;
}
	
int spawnplayer_cmd(int player, int x, int y){
	printf("[Parse] Error: spawnplayer(int player, int x, int y) is unimplemented.\n");

	return 0;
}
	
int speedmod_cmd(int player, int speedmod){
	printf("[Parse] Error: speedmod(int player, int speedmod) is unimplemented.\n");

	return 0;
}
	
int strip_cmd(int player, int weapon){
	printf("[Parse] Error: strip(int player, int weapon) is unimplemented.\n");

	return 0;
}
	
int sv_fow_cmd(int fow){
	printf("[Parse] Error: sv_fow(int fow) is unimplemented.\n");

	return 0;
}
	
int sv_friendlyfire_cmd(int ff){
	printf("[Parse] Error: sv_friendlyfire(int ff) is unimplemented.\n");

	return 0;
}
	
int sv_gamemode_cmd(int mode){
	printf("[Parse] Error: sv_gamemode(int mode) is unimplemented.\n");

	return 0;
}
	
int sv_gm_cmd(int mode){
	printf("[Parse] Error: sv_gm(int mode) is unimplemented.\n");

	return 0;
}
	
int sv_hostport_cmd(int port){
	printf("[Parse] Error: sv_hostport(int port) is unimplemented.\n");

	return 0;
}
	
int sv_lan_cmd(int lan){
	printf("[Parse] Error: sv_lan(int lan) is unimplemented.\n");

	return 0;
}
	
int sv_map_cmd(char* map){
	printf("[Parse] Error: sv_map(char* map) is unimplemented.\n");

	return 0;
}
	
int sv_maptransfer_cmd(int transfer){
	printf("[Parse] Error: sv_maptransfer(int transfer) is unimplemented.\n");

	return 0;
}
	
int sv_maxplayers_cmd(int players){
	printf("[Parse] Error: sv_maxplayers(int players) is unimplemented.\n");

	return 0;
}
	
int sv_msg_cmd(char* message){
	printf("[Parse] Error: sv_msg(char* message) is unimplemented.\n");

	return 0;
}
	
int sv_msg2_cmd(int player, char* message){
	printf("[Parse] Error: sv_msg2(int player, char* message) is unimplemented.\n");

	return 0;
}
	
int sv_name_cmd(char* name){
	printf("[Parse] Error: sv_name(char* name) is unimplemented.\n");

	return 0;
}
	
int sv_password_cmd(char* password){
	printf("[Parse] Error: sv_password(char* password) is unimplemented.\n");

	return 0;
}
	
int sv_rcon_cmd(char* rcon){
	printf("[Parse] Error: sv_rcon(char* rcon) is unimplemented.\n");

	return 0;
}
	
int sv_restart_cmd(int delay){
	printf("[Parse] Error: sv_restart(int delay) is unimplemented.\n");

	return 0;
}
	
int sv_restartround_cmd(int delay){
	printf("[Parse] Error: sv_restartround(int delay) is unimplemented.\n");

	return 0;
}
	
int sv_sound_cmd(char* soundfile){
	printf("[Parse] Error: sv_sound(char* soundfile) is unimplemented.\n");

	return 0;
}
	
int sv_sound2_cmd(int player, char* soundfile){
	printf("[Parse] Error: sv_sound2(int player, char* soundfile) is unimplemented.\n");

	return 0;
}
	
int sv_specmode_cmd(int mode){
	printf("[Parse] Error: sv_specmode(int mode) is unimplemented.\n");

	return 0;
}
	
int sv_spraytransfer_cmd(int spray){
	printf("[Parse] Error: sv_spraytransfer(int spray) is unimplemented.\n");

	return 0;
}
	
int sv_usgnonly_cmd(int usgn){
	printf("[Parse] Error: sv_usgnonly(int usgn) is unimplemented.\n");

	return 0;
}
	
int transfer_speed_cmd(int speed){
	printf("[Parse] Error: transfer_speed(int speed) is unimplemented.\n");

	return 0;
}
	
int trigger_cmd(char* trigger){
	printf("[Parse] Error: trigger(char* trigger) is unimplemented.\n");

	return 0;
}
	
int unban_cmd(char* banmask){
	printf("[Parse] Error: unban(char* banmask) is unimplemented.\n");

	return 0;
}
	
int unbanall_cmd(){
	printf("[Parse] Error: unbanall() is unimplemented.\n");

	return 0;
}
	
int usgn_addserver_cmd(){
	printf("[Parse] Error: usgn_addserver() is unimplemented.\n");

	return 0;
}
	
int usgn_info_cmd(){
	printf("[Parse] Error: usgn_info() is unimplemented.\n");

	return 0;
}
	